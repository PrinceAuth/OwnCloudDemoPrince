// Code generated by moshi-kotlin-codegen. Do not edit.
@file:Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION",
    "RedundantExplicitType", "LocalVariableName", "RedundantVisibilityModifier",
    "PLATFORM_CLASS_MAPPED_TO_KOTLIN")

package com.owncloud.android.lib.resources.status.responses

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import kotlin.Boolean
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import kotlin.collections.emptySet
import kotlin.text.buildString

public class FileSharingPublicPasswordEnforcedJsonAdapter(
  moshi: Moshi
) : JsonAdapter<FileSharingPublicPasswordEnforced>() {
  private val options: JsonReader.Options = JsonReader.Options.of("read_only", "read_write",
      "upload_only")

  private val nullableBooleanAdapter: JsonAdapter<Boolean?> =
      moshi.adapter(Boolean::class.javaObjectType, emptySet(), "enforcedReadOnly")

  public override fun toString(): String = buildString(55) {
      append("GeneratedJsonAdapter(").append("FileSharingPublicPasswordEnforced").append(')') }

  public override fun fromJson(reader: JsonReader): FileSharingPublicPasswordEnforced {
    var enforcedReadOnly: Boolean? = null
    var enforcedReadWrite: Boolean? = null
    var enforcedUploadOnly: Boolean? = null
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> enforcedReadOnly = nullableBooleanAdapter.fromJson(reader)
        1 -> enforcedReadWrite = nullableBooleanAdapter.fromJson(reader)
        2 -> enforcedUploadOnly = nullableBooleanAdapter.fromJson(reader)
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    return FileSharingPublicPasswordEnforced(
        enforcedReadOnly = enforcedReadOnly,
        enforcedReadWrite = enforcedReadWrite,
        enforcedUploadOnly = enforcedUploadOnly
    )
  }

  public override fun toJson(writer: JsonWriter, value_: FileSharingPublicPasswordEnforced?): Unit {
    if (value_ == null) {
      throw NullPointerException("value_ was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("read_only")
    nullableBooleanAdapter.toJson(writer, value_.enforcedReadOnly)
    writer.name("read_write")
    nullableBooleanAdapter.toJson(writer, value_.enforcedReadWrite)
    writer.name("upload_only")
    nullableBooleanAdapter.toJson(writer, value_.enforcedUploadOnly)
    writer.endObject()
  }
}
